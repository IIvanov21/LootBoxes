- name: Install aptitude using apt
  apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

- name: Install required system packages
  apt: name={{ item }} state=latest update_cache=yes
  loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']

- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Verify that we have the key with the fingerprint
  remote_user: ansible
  apt_key:
    id: 0EBFCD88
    state: present
  tags:
    - docker

- name: Add Docker Repository
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu bionic stable
    state: present

- name: Update apt and install docker-ce
  apt: update_cache=yes name=docker-ce state=latest

- name: Install Docker Module for Python
  pip:
    name: docker

- name: Pull default Docker image
  docker_image:
    name: "{{ default_container_image }}"
    source: pull

- name: Add remote "ansible" user to "docker" group
  remote_user: ansible
  user:
    name: "ansible"
    group: "docker"
    append: yes
  tags:
    - docker

- name: Install docker-compose
  remote_user: ansible, callt
  get_url: 
    url : https://github.com/docker/compose/releases/download/1.25.1-rc1/docker-compose-Linux-x86_64
    dest: /usr/local/bin/docker-compose
    mode: 'ugo+x'

# Creates the number of containers defined by the variable create_containers, using values from vars file
- name: Create default containers
  docker_container:
    name: "{{ default_container_name }}{{ item }}"
    image: "{{ default_container_image }}"
    command: "{{ default_container_command }}"
    state: present
  with_sequence: count={{ create_containers }}